{
  "hash": "8f52497a7804cbe629ea6426e10e2626",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 6\"\nsubtitle: \" \"\nauthor: \"Guan Jhen Lin\"\ndate: \"May 18 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\nExploring the King James Bible.\n\nWe will be using <https://kgjerde.github.io/corporaexplorer/articles/bible.html> for practice.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringi)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(tibble)\nlibrary(rvest)\nlibrary(corporaexplorer)\nlibrary(readr)\nlibrary(quanteda)\nlibrary(tidytext)\nlibrary(tidyverse)\n#library(textnets) ignore this as has to download from github\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbible <- readr::read_lines(\"http://www.gutenberg.org/cache/epub/10/pg10.txt\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Collapsing into one string.\nbible <- paste(bible, collapse = \"\\n\")\n\n# Identifying the beginning and end of the Bible / stripping PJ metadata\n # (technique borrowed from https://quanteda.io/articles/pkgdown/replication/digital-humanities.html).\nstart_v <- stri_locate_first_fixed(bible, \"The First Book of Moses: Called Genesis\")[1]\nend_v <- stri_locate_last_fixed(bible, \"Amen.\")[2]\nbible <- stri_sub(bible, start_v, end_v)\n\n# In the file, every book in the bible is preceded by five newlines,\n  # which we use to split our string into a vector where each element is a book.\nbooks <- stri_split_regex(bible, \"\\n{5}\") %>%\n    unlist %>%\n    .[-40]  # Removing the heading \"The New Testament of the King James Bible\",\n              # which also was preceded by five newlines.\n\n# Because of the structure of the text in the file:\n  # Replacing double or more newlines with two newlines, and a single newline with space.\nbooks <- str_replace_all(books, \"\\n{2,}\", \"NEW_PARAGRAPH\") %>%\n    str_replace_all(\"\\n\", \" \") %>%\n    str_replace_all(\"NEW_PARAGRAPH\", \"\\n\\n\")\nbooks <- books[3:68]  # The two first elements are not books\n\n# Identifying new chapters within each book and split the text into chapters.\n# (The first characters in chapter 2 will e.g. be 2:1)\nchapters <- str_replace_all(books, \"(\\\\d+:1 )\", \"NEW_CHAPTER\\\\1\") %>%\n    stri_split_regex(\"NEW_CHAPTER\")\n\n# Removing the chapter headings from the text (we want them as metadata).\nchapters <- lapply(chapters, function(x) x[-1])\n```\n:::\n\n\nMetadata\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# We are not quite happy with the long book titles in the King James Bible,\n  # so we retrieve shorter versions from esv.org which will take up less\n  # space in the corpus map plot.\nbook_titles <- read_html(\"https://www.esv.org/resources/esv-global-study-bible/list-of-abbreviations\") %>%\n  html_nodes(\"td:nth-child(1)\") %>%\n  html_text() %>%\n  .[13:78]  # Removing irrelevant elements after manual inspection.\n\n# We add a column indicating whether a book belongs to the Old or New Testament,\n#   knowing that they contain respectively 39 and 27 books.\ntestament <- c(rep(\"Old\", 39), rep(\"New\", 27))\n```\n:::\n\n\nCreating data frame with text and metadata\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data frame with one book as one row.\nbible_df <- tibble::tibble(Text = chapters,\n                           Book = book_titles,\n                           Testament = testament)\n\n# We want each chapter to be one row, but keep the metadata (book and which testament).\nbible_df <- tidyr::unnest(bible_df, Text)\n```\n:::\n\n\ncorporaexplorer When we first have a data frame with text and metadata, creating a “corporaexplorerobject” for exploration is very simple:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# As this is a corpus which is not organised by date,\n  # we set `date_based_corpus` to `FALSE`.\n# Because we want to organise our exploration around the books in the Bible,\n  # we pass `\"Book\"` to the `grouping_variable` argument.\n# We specify which metadata columns we want to be displayed in the\n  # \"Document information\" tab, using the `columns_doc_info` argument.\nKJB <- prepare_data(dataset = bible_df,\n                    date_based_corpus = FALSE,\n                    grouping_variable = \"Book\",\n                    columns_doc_info = c(\"Testament\", \"Book\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(KJB) #have to be before explore\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"corporaexplorerobject\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexplore(KJB) #opens shiney app\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n\n\n![](images/KJB_moses_new_doc.png)\n\n\nExtra Notes: \n- This particular exercise is very useful for MC1 in VAST challenge. \n- \n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}