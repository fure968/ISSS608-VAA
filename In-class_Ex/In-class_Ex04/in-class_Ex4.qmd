---
title: "In Class Exercise 4"
subtitle: " "
author: "Guan Jhen Lin"
date: "May 04 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

## Getting Started

```{r}
pacman::p_load(tidyverse, ggstatsplot)
```

```{r}
exam <- read_csv("data/Exam_data.csv")
```

```{r}
set.seed(1234)
```

```{r}
gghistostats(
  data = exam,
  x = ENGLISH, 
  type = 'parametric',
  test.value = 60, 
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7), 
  normal.curve = FALSE,
  normal.curve.args = list(linewidth 
= 2), 
  xlab = "English scores"
)
```

```{r}

gghistostats(
  data = exam,
  x = ENGLISH, 
  type = 'np',
  test.value = 60, 
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7), 
  normal.curve = FALSE,
  normal.curve.args = list(linewidth 
= 2), 
    xlab = "English scores"
)
```

```{r}
p <- gghistostats(
  data = exam,
  x = ENGLISH, 
  type = 'np',
  test.value = 60, 
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7), 
  normal.curve = FALSE,
  normal.curve.args = list(linewidth 
= 2), 
    xlab = "English scores"
)

```

```{r}
extract_stats(p)
```

```{r}
  gghistostats(
  data = exam,
  x = ENGLISH, 
  type = 'bayes',
  test.value = 60, 
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7), 
  normal.curve = FALSE,
  normal.curve.args = list(linewidth = 2), 
  xlab = "English scores"
)

```

```{r}
ggdotplotstats(
  data = exam,
  x = ENGLISH, 
  y = CLASS,
  title = "",
  xlab = ""
  
)
```

```{r}
exam_long <- exam %>%
   pivot_longer(
     cols = ENGLISH:SCIENCE,
     names_to = "SUBJECT",
     values_to = "SCORES") %>%
  filter(CLASS =="3A")
```

```{r}
ggwithinstats(
    data = filter(exam_long,
                SUBJECT %in%
                  c("MATHS", "SCIENCE")),
  x    = SUBJECT,
  y    = SCORES,
  type = "p"
)
```

```{r}
ggscatterstats(
  data = exam,
  x = MATHS,
  y = ENGLISH, 
  marginal = TRUE, 
  label.var = ID,
  label.expression = ENGLISH >90 & MATHS  > 90,
)
```

Other Notes:
We can add in the following code chunk to have a listing on our home page.
<details>
<summary>Click to show code</summary>
listing: contents: - "tkx_01.qmd" 
- "Take_home_x02.qmd" 
sort: - "date desc" 
- "title desc"
max-items: 3 
type: grid 
fields: \[image, date, title, 
author, reading-time\] 
toc: false
</details>
