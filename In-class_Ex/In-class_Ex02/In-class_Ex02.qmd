---
title: "In-class Exercise 2"
subtitle: ""
author: "Guan Jhen Lin"
date: "Apr 20, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

<!-- Google tag (gtag.js) -->
\<script async src="https://www.googletagmanager.com/gtag/js?id=G-65B5RWMGTX"\>\</script\>
\<script\>
window.dataLayer = window.dataLayer \|\| \[\];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());

gtag('config', 'G-65B5RWMGTX');
\</script\>

```{r}
pacman::p_load(ggrepel, patchwork, ggthemes, 
               tidyverse, ggridges) 
```

```{r, message=FALSE}
exam_data <- read_csv("Exam_data.csv")
summary(exam_data)
```

```{r, message=FALSE}
exam_df <- read_csv("Exam_data.csv")
summary(exam_df)
```

Using the steps you have learned, build a histogram

```{r}
ggplot(data=exam_df, 
       aes(x = ENGLISH)) +
geom_histogram(bins=30,            
                 color="black",      
                 fill="light blue") 
```

Probability Density Plot

```{r}
ggplot(data=exam_df, 
       aes(x = ENGLISH)) +
  geom_density(
     color = "#1696d2",
     adjust = .54,
     alpha = .6
  )
```

The alternative design

```{r}
median_eng <- median(exam_df$ENGLISH)
mean_eng <- mean(exam_df$ENGLISH)
std_eng <- (exam_df$ENGLISH)

ggplot(exam_df,
       aes(x= ENGLISH)) +
  geom_density(
    color = "#1696d2",
    adjust = .65,
    alpha = .6) +
  stat_function(
    fun = dnorm, 
    args = list(mean = mean_eng,
                sd = std_eng),
    col = "grey10",
    size = .8) +
  geom_vline(
    aes(xintercept = mean_eng), 
    color="#4d5887",
    linewidth = .6,
    linetype = "dashed") +
  annotate(geom="text", 
           x = mean_eng - 8,
           y = 0.04, 
           label = paste0("Mean ENGLISH: ",round((mean_eng),2)),
           color = "#4d5887")
  
    geom_vline()

  




```
