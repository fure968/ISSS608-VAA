---
title: "Hands on Exercise 1"
author: "Guan Jhen Lin"
date: "Apr 13, 2024"
date-modified: "Apr 13, 2024"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# Getting Started

<!-- Google tag (gtag.js) -->
\<script async src="https://www.googletagmanager.com/gtag/js?id=G-65B5RWMGTX"\>\</script\>
\<script\>
window.dataLayer = window.dataLayer \|\| \[\];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());

gtag('config', 'G-65B5RWMGTX');
\</script\>

Load and Install R packages

```{r}
pacman::p_load(tidyverse, forcats)
```

# Import Data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
summary(exam_data)
```

#Introductions to ggplot The aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can thus encode an aspect of the data and be used to convey information.

Bar chart

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

Dot Plot

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  
```

Histogram

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()       
```

changing aes()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30") 
```

# ggplot2: geom

geom-density()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density()         
```

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS, 
           colour = GENDER)) +
  geom_density()        
```

geom_boxplot

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS,       
           x= GENDER)) +    
  geom_boxplot()  
```

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE)
```

geom_violin

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()
```

geom_point()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point()     
```

combining geom objects

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot() +                    
  geom_point(position="jitter", 
             size = 0.5)        
```

# Statistics Functions

The [Statistics](https://ggplot2.tidyverse.org/reference/#stats) functions statistically transform data, usually as some form of summary.

Using stat_summary() function to over ride the default geom.

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",        
             fun.y="mean",           
             colour ="red",          
             size=4)     
```

Adding best curve on a scatterplot using geom_smooth

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(size=0.5)
```

Without using geom_smooth

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point()
```

Overriding default smoothing method

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5)
```

# ggplot2: facets

facet_wrap()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_wrap(~ CLASS)
```

facet_grid()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_grid(~ CLASS)
```

# ggplot 2: coordinates

By the default, the bar chart of ggplot2 is in vertical form. The code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```

Changing the y- and x- axis range

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```

# Using Themes

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()
```
