---
title: "Hands-on Exercise 4"
subtitle: ""
author: "Guan Jhen Lin"
date: "Apr 27, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
output:
  pdf_document:
    latex_engine: xelatex
---

# 4.1 Visual Statistical Analysis

Getting Started

```{r}
pacman::p_load(ggstatsplot, tidyverse)
```

```{r}
exam <- read_csv("data/Exam_data.csv")
```

One-sample test: gghistostats() method

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "bayes",
  test.value = 60,
  xlab = "English scores"
)
```

-   A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.

-   Thatâ€™s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.

Learn how to interpret Bayes Factor [Here](https://www-tandfonline-com.libproxy.smu.edu.sg/doi/pdf/10.1080/00031305.1999.10474443?needAccess=true).

Two-sample mean test: ggbetweenstats()

```{r}

ggbetweenstats(
  data = exam,
  x = GENDER, 
  y = MATHS,
  type = "np",
  messages = FALSE
)
```

Oneway ANOVA Test: ggbetweenstats() method

```{r}
ggbetweenstats(
  data = exam,
  x = RACE, 
  y = ENGLISH,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

Significant Test of Correlation: ggscatterstats()

```{r}
ggscatterstats(
  data = exam,
  x = MATHS,
  y = ENGLISH,
  marginal = FALSE,
  )
```


Significant Test of Association (Depedence) : ggbarstats() methods
```{r}
exam1 <- exam %>% 
  mutate(MATHS_bins = 
           cut(MATHS, 
               breaks = c(0,60,75,85,100))
)
```

using ggbarstats
```{r}
ggbarstats(exam1, 
           x = MATHS_bins, 
           y = GENDER)

```

# 4.1.1 Visualising Models

```{r}
pacman::p_load(readxl, performance, parameters, see)
```

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale
```


Multiple Regression Model using lm()
```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```



Model Diagnostic: checking for multicolinearity
```{r}
check_collinearity(model)
```

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```


Model Diagnostic: checking normality assumption

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
```

```{r}              
check_n <- check_normality(model1)
```

```{r}
plot(check_n)
```


Model Diagnostic: Check model for homogeneity of variances

```{r}
check_h <- check_heteroscedasticity(model1)
```

```{r}
plot(check_h)
```

Model Diagnostic: Complete check
```{r}
check_model(model1)
```


Visualising Regression Parameters: see methods
```{r}
plot(parameters(model1))
```

Visualising Regression Parameters: ggcoefstats() methods
```{r}
ggcoefstats(model1, 
            output = "plot")
```



# 4.2 Visualising Uncertainty
