---
title: "Take Home Exercise 1"
subtitle: "Creating data visualisation beyond default"
author: "Guan Jhen Lin"
date: "Apr 21, 2024"
date-modified: "Apr 13, 2024"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# Introduction

In Singapore, the residential property market is bifurcated into public and private sectors. The public housing sector serves households with a monthly income of up to S\$14,000, aiming to offer affordable housing solutions to the broader community. In contrast, the private housing sector caters to households with incomes surpassing S\$14,000.

For this analysis, we will leverage REALIS transaction data covering the period from 1st January 2023 to 31st March 2024. Our exploration will be conducted using ggplot2 and its associated extensions.

# Setting the Stage

In this scenario, we assume the role of a graphical editor for a media company. We have been tasked with creating two to three data visualizations to illuminate the private residential market and its sub-markets in Singapore for the first quarter of 2024.

# Data Preparation

Load R Packages

```{r}
pacman::p_load(tidyverse, haven,
               ggrepel, ggthemes,
               ggridges, ggdist,
               patchwork, scales)
pacman::p_load(HH, tidyverse)
```

Import the 5 data sets

```{r}
ds1 <- read_csv("data/ds1.csv")
ds2 <- read_csv("data/ds2.csv")
ds3 <- read_csv("data/ds3.csv")
ds4 <- read_csv("data/ds4.csv")
ds5 <- read_csv("data/ds5.csv")
```

Identify the missing values in the data set and removed any missing elements. 'Type of Sale' and 'Property type' has been converted to factor format. 'Transacted Price (\$)' and 'Area (SQFT)' are converted to numeric data types. 'Type of Sale' has been group into three categories. 
'Sale Date' has been converted to Date format. 

The process had been repeated for all five data sets.

```{r}
# Convert Sale Date to Date format
ds1$`Sale Date` <- dmy(ds1$`Sale Date`)
ds2$`Sale Date` <- dmy(ds2$`Sale Date`)
ds3$`Sale Date` <- dmy(ds3$`Sale Date`)
ds4$`Sale Date` <- dmy(ds4$`Sale Date`)
ds5$`Sale Date` <- dmy(ds5$`Sale Date`)
```

::: panel-tabset
## ds1

```{r}
colSums(is.na(ds1))
ds1 <- na.omit(ds1)

ds1$`Type of Sale` <- as.factor(ds1$`Type of Sale`)
ds1$`Property Type` <- as.factor(ds1$`Property Type`)
ds1$`Transacted Price ($)` <- as.numeric(gsub("[^0-9.]", "", ds1$`Transacted Price ($)`, perl = TRUE))
ds1$`Area (SQFT)` <- as.numeric(gsub("[^0-9.]", "", ds1$`Area (SQFT)`, perl = TRUE))
ds1$`Type of Sale` <- tolower(ds1$`Type of Sale`)
ds1$`Type of Sale` <- ifelse(ds1$`Type of Sale` %in% c("new sale", "resale"), ds1$`Type of Sale`, "other")
```

## ds2

```{r}
colSums(is.na(ds2))
ds2 <- na.omit(ds2)

ds2$`Type of Sale` <- as.factor(ds2$`Type of Sale`)
ds2$`Property Type` <- as.factor(ds2$`Property Type`)
ds2$`Transacted Price ($)` <- as.numeric(gsub("[^0-9.]", "", ds2$`Transacted Price ($)`, perl = TRUE))
ds2$`Area (SQFT)` <- as.numeric(gsub("[^0-9.]", "", ds2$`Area (SQFT)`, perl = TRUE))
ds2$`Type of Sale` <- tolower(ds2$`Type of Sale`)
ds2$`Type of Sale` <- ifelse(ds2$`Type of Sale` %in% c("new sale", "resale"), ds2$`Type of Sale`, "other")
```

## ds3

```{r}
colSums(is.na(ds3))
ds3 <- na.omit(ds3)

ds3$`Type of Sale` <- as.factor(ds3$`Type of Sale`)
ds3$`Property Type` <- as.factor(ds3$`Property Type`)
ds3$`Transacted Price ($)` <- as.numeric(gsub("[^0-9.]", "", ds3$`Transacted Price ($)`, perl = TRUE))
ds3$`Area (SQFT)` <- as.numeric(gsub("[^0-9.]", "", ds3$`Area (SQFT)`, perl = TRUE))
ds3$`Type of Sale` <- tolower(ds3$`Type of Sale`)
ds3$`Type of Sale` <- ifelse(ds3$`Type of Sale` %in% c("new sale", "resale"), ds3$`Type of Sale`, "other")
```

## ds4

```{r}
colSums(is.na(ds4))
ds4 <- na.omit(ds4)

ds4$`Type of Sale` <- as.factor(ds4$`Type of Sale`)
ds4$`Property Type` <- as.factor(ds4$`Property Type`)
ds4$`Transacted Price ($)` <- as.numeric(gsub("[^0-9.]", "", ds4$`Transacted Price ($)`, perl = TRUE))
ds4$`Area (SQFT)` <- as.numeric(gsub("[^0-9.]", "", ds4$`Area (SQFT)`, perl = TRUE))
ds4$`Type of Sale` <- tolower(ds4$`Type of Sale`)
ds4$`Type of Sale` <- ifelse(ds4$`Type of Sale` %in% c("new sale", "resale"), ds4$`Type of Sale`, "other")
```

## ds5

```{r}
colSums(is.na(ds5))
ds5 <- na.omit(ds5)

ds5$`Type of Sale` <- as.factor(ds5$`Type of Sale`)
ds5$`Property Type` <- as.factor(ds5$`Property Type`)
ds5$`Transacted Price ($)` <- as.numeric(gsub("[^0-9.]", "", ds5$`Transacted Price ($)`, perl = TRUE))
ds5$`Area (SQFT)` <- as.numeric(gsub("[^0-9.]", "", ds5$`Area (SQFT)`, perl = TRUE))
ds5$`Type of Sale` <- tolower(ds5$`Type of Sale`)
ds5$`Type of Sale` <- ifelse(ds5$`Type of Sale` %in% c("new sale", "resale"), ds5$`Type of Sale`, "other")
```

:::

# EDA 1

Relationship between Transactions in Jan 2023 to Jan 2024. The month has been extracted from the 'Sale Date' for better visualisation. 

<details>

<summary>Click to show code</summary>

```{r}
# Load required libraries
library(dplyr)
library(lubridate)
library(ggplot2)

# Extract month from Sale Date
ds1$Month <- month(ds1$`Sale Date`, label = TRUE)
ds2$Month <- month(ds2$`Sale Date`, label = TRUE)
ds3$Month <- month(ds3$`Sale Date`, label = TRUE)
ds4$Month <- month(ds4$`Sale Date`, label = TRUE)
ds5$Month <- month(ds5$`Sale Date`, label = TRUE)

# Create individual bar plots for each quarter
Q124 <- ggplot(ds1, aes(x = Month)) +
  geom_bar(fill = "lightgreen", color = "black", alpha = 0.7) +
  labs(
    title = "Distribution of Transactions 2024 Q1",
    x = "Month",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    axis.text.y = element_text(size =8),
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title = element_text(size = 8),
    legend.text = element_text(size = 8)
  )

Q423 <- ggplot(ds2, aes(x = Month)) +
  geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
  labs(
    title = "Distribution of Transactions 2023 Q4",
    x = "Month",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    axis.text.y = element_text(size =8),
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title = element_text(size = 8),
    legend.text = element_text(size = 8)
  )

Q323 <- ggplot(ds3, aes(x = Month)) +
  geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
  labs(
    title = "Distribution of Transactions 2023 Q3",
    x = "Month",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    axis.text.y = element_text(size =8),
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title = element_text(size = 8),
    legend.text = element_text(size = 8)
  )

Q223 <- ggplot(ds4, aes(x = Month)) +
  geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
  labs(
    title = "Distribution of Transactions 2023 Q2",
    x = "Month",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    axis.text.y = element_text(size =8),
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title = element_text(size = 8),
    legend.text = element_text(size = 8)
  )

Q123 <- ggplot(ds5, aes(x = Month)) +
  geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
  labs(
    title = "Distribution of Transactions 2023 Q1",
    x = "Month",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    axis.text.y = element_text(size =8),
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title = element_text(size = 8),
    legend.text = element_text(size = 8)
  )

```

</details>

```{r}
Q123 + Q223 + Q323 +Q423

```

```{r}
Q123 + Q124
```

We're comparing the first quarters of 2023 and 2024 to understand any changes in transaction volumes. Notably, January 2023 shows fewer transactions than January 2024.

This difference might be due to the easing of COVID-19 restrictions in early 2023. As people adjust to the changing circumstances, there's a cautious approach towards property investments.

The increase in February 2023 suggests a possible recovery or resurgence in market activity following the easing of COVID-19 restrictions. However, by March 2023, we see a slight decrease of transactions. This could indicate a temporary dip or stabilization in market demand after the initial uptick in February.



# EDA 2

We analyzed unit price ($PSF) across Singapore's planning regions for 2023, using four quarterly charts to visualize regional price variations. The Central Region consistently showed the highest median PSF, indicating its premium status. In contrast, the North East and East Regions maintained stable PSF values, balancing affordability with location.

<details>

<summary>Click to show code</summary>

```{r}
library(ggplot2)
library(cowplot)

# Price per Square Foot by Planning Region in DS2
q4 <- ggplot(ds2, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +
  geom_boxplot() +
  labs(title = "Price per Square Foot by Planning Region - Oct 23 - Dec 23",
       x = "Planning Region",
       y = "Unit Price ($ PSF)") +
  theme(text = element_text(size = 6)) 

# Price per Square Foot by Planning Region in DS3
q3 <- ggplot(ds3, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +
  geom_boxplot() +
  labs(title = "Price per Square Foot by Planning Region - Jul 23 - Sep 23",
       x = "Planning Region",
       y = "Unit Price ($ PSF)") +
  theme(text = element_text(size = 6)) 

# Price per Square Foot by Planning Region in DS4
q2 <- ggplot(ds4, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +
  geom_boxplot() +
  labs(title = "Price per Square Foot by Planning Region - Apr 23 - Jun 23",
       x = "Planning Region",
       y = "Unit Price ($ PSF)") +
  theme(text = element_text(size = 6)) 

# Price per Square Foot by Planning Region in DS5
q1 <- ggplot(ds5, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +
  geom_boxplot() +
  labs(title = "Price per Square Foot by Planning Region - Jan 23 - Mar 23",
       x = "Planning Region",
       y = "Unit Price ($ PSF)") +
  theme(text = element_text(size = 6)) 

```

</details>

```{r}
# Combine the plots using wrap_plots
combined_plot <- wrap_plots(q1, q2, q3, q4)
# Display the combined plot
combined_plot
```

Next, we combined the data sets and see the graph from 2023 Q1 - Q4 box plot. We will analyse the Interquartile Range (IQR) and drawing some insights from the graph.

Central Region

-   The Central Region has a significant concentration of high-end properties, with prices extending to much higher values compared to other regions.

-   This region is likely a hotspot for luxury properties catering to affluent investors and high-income earners.

East Region

-   The East Region has a strong presence of high-end properties, although slightly more affordable compared to the Central Region.

-   Potential investors and buyers in this region might find relatively better value for premium properties compared to the Central Region.

North East Region

-   The North East Region shows a moderate presence of high-priced properties, with fewer outliers compared to other regions.

-   This region might offer a balanced mix of affordable and mid-range properties, appealing to a broader range of buyers.

North Region

-   The North Region predominantly consists of properties within a more affordable price range.

-   This region may attract first-time homebuyers, young families, or individuals looking for budget-friendly housing options.

West Region

-   The West Region offers a diverse range of properties without extreme price outliers.

-   This region could be suitable for buyers seeking a mix of affordability and variety in property choices.

<details>

<summary>Click to show code</summary>

```{r}
# Load required libraries
library(dplyr)
library(ggplot2)
library(plotly)

# Combine the datasets into a single dataset
combined_ds <- bind_rows(
  ds1 %>% mutate(Data_Source = "data/ds1.csv"),
  ds2 %>% mutate(Data_Source = "data/ds2.csv"),
  ds3 %>% mutate(Data_Source = "data/ds3.csv"),
  ds4 %>% mutate(Data_Source = "data/ds4.csv"),
  ds5 %>% mutate(Data_Source = "data/ds5.csv"),
)

# Calculate median and IQR by Planning Region
summary_stats <- combined_ds %>%
  group_by(`Planning Region`) %>%
  summarise(
    median_PSF = median(`Unit Price ($ PSF)`, na.rm = TRUE),
    lower_quartile = quantile(`Unit Price ($ PSF)`, 0.25, na.rm = TRUE),
    upper_quartile = quantile(`Unit Price ($ PSF)`, 0.75, na.rm = TRUE)
  )

# Create a boxplot for Price per Square Foot by Planning Region
p <- ggplot(combined_ds, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +
  geom_boxplot() +
  stat_summary(
    fun = median,
    geom = "point",
    shape = 23,
    size = 3,
    color = "blue",
    position = position_dodge(width = 0.75)
  ) +
  labs(
    title = "Distribution of Price per Square Foot by Planning Region - 2023 Q1-Q4",
    x = "Planning Region",
    y = "Unit Price ($ PSF)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Convert ggplot to plotly object for interactivity
p_plotly <- ggplotly(p, tooltip = c("Planning Region", "y", "Data_Source", "median_PSF", "lower_quartile", "upper_quartile"))

# Convert ggplot to plotly object for interactivity
p_plotly <- plotly::ggplotly(p, tooltip = c("Planning Region", "y", "Data_Source", "median_PSF", "lower_quartile", "upper_quartile"))
  
```

</details>

```{r}
# Display the interactive plot
p_plotly

```


# EDA 3

Relationship between Property Type & Purchaser Address Indicator

According to REALIS data dictionary, 'Purchaser Address Indicator' refers to the type of residence (either HDB flat or private property) associated with the purchaser's address as indicated in the caveat. It doesn't necessarily imply ownership but rather reflects the type of housing the purchaser resides in. If this information is unavailable, it's marked as 'N.A'.

It's notable that a significant majority of private property buyers (presumably those residing in these properties) live in private residences. Interestingly, executive condominiums have the highest proportion of purchasers with HDB addresses, accounting for 53.6%. This could be attributed to the attractive rental yields in Singapore. Consequently, more residents might be purchasing executive condominiums primarily as investment properties.

```{r}

library(ggplot2)
library(dplyr)
library(tidyr)

# Calculate the percentage of each Purchaser Address Indicator within each Property Type
percentage_data <- combined_ds %>%
  group_by(`Property Type`, `Purchaser Address Indicator`) %>%
  summarise(Count = n()) %>%
  group_by(`Property Type`) %>%
  mutate(Percentage = (Count / sum(Count)) * 100) %>%
  ungroup()

# Plot the stacked bar chart
plot <- ggplot(percentage_data, aes(x = `Property Type`, y = Percentage, fill = `Purchaser Address Indicator`)) +
  geom_bar(stat = "identity", position = "stack") +
  geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_stack(vjust = 0.5), 
            size = 3, 
            color = "black") +
  labs(
    title = "Percentage of Purchaser Address Indicator by Property Type",
    x = "Property Type",
    y = "Percentage (%)",
    fill = "Purchaser Address Indicator"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

print(plot)
```

