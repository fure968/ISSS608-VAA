[
  {
    "objectID": "Take-home/Take-home_ex1/tkx01.html",
    "href": "Take-home/Take-home_ex1/tkx01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "Introduction\nIn Singapore, the residential property market is bifurcated into public and private sectors. The public housing sector serves households with a monthly income of up to S$14,000, aiming to offer affordable housing solutions to the broader community. In contrast, the private housing sector caters to households with incomes surpassing S$14,000.\nFor this analysis, we will leverage REALIS transaction data covering the period from 1st January 2023 to 31st March 2024. Our exploration will be conducted using ggplot2 and its associated extensions.\n\n\nSetting the Stage\nIn this scenario, we assume the role of a graphical editor for a media company. We have been tasked with creating two to three data visualizations to illuminate the private residential market and its sub-markets in Singapore for the first quarter of 2024.\n\n\nData Preparation\nLoad R Packages\n\npacman::p_load(tidyverse, haven,\n               ggrepel, ggthemes,\n               ggridges, ggdist,\n               patchwork, scales)\npacman::p_load(HH, tidyverse)\n\nImport the 5 data sets\n\nds1 &lt;- read_csv(\"data/ds1.csv\")\nds2 &lt;- read_csv(\"data/ds2.csv\")\nds3 &lt;- read_csv(\"data/ds3.csv\")\nds4 &lt;- read_csv(\"data/ds4.csv\")\nds5 &lt;- read_csv(\"data/ds5.csv\")\n\nMissing values had been removed to prevent parsing issues, to ensure that the data types matches the actual data some columns had been converted. Sale Date and Completion Date columns had been changed to as.Date format and Type of Sale, Property Type had been changed from char to factor data type.\nFor numeric columns, remove any non-numeric characters or replace them with appropriate values. For categorical columns, ensure consistent naming and handle any inconsistent or misspelled categories. After cleaning, validate the data to ensure that all inconsistencies and anomalies have been addressed.\nThe process had been repeated for all five data sets.\n\nds1ds2ds3ds4ds5\n\n\n\ncolSums(is.na(ds1))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds1 &lt;- na.omit(ds1)\n\nds1$`Type of Sale` &lt;- as.factor(ds1$`Type of Sale`)\nds1$`Property Type` &lt;- as.factor(ds1$`Property Type`)\nds1$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds1$`Transacted Price ($)`, perl = TRUE))\nds1$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds1$`Area (SQFT)`, perl = TRUE))\nds1$`Type of Sale` &lt;- tolower(ds1$`Type of Sale`)\nds1$`Type of Sale` &lt;- ifelse(ds1$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds1$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds2))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds2 &lt;- na.omit(ds2)\n\nds2$`Type of Sale` &lt;- as.factor(ds2$`Type of Sale`)\nds2$`Property Type` &lt;- as.factor(ds2$`Property Type`)\nds2$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds2$`Transacted Price ($)`, perl = TRUE))\nds2$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds2$`Area (SQFT)`, perl = TRUE))\nds2$`Type of Sale` &lt;- tolower(ds2$`Type of Sale`)\nds2$`Type of Sale` &lt;- ifelse(ds2$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds2$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds3))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          6                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds3 &lt;- na.omit(ds3)\n\nds3$`Type of Sale` &lt;- as.factor(ds3$`Type of Sale`)\nds3$`Property Type` &lt;- as.factor(ds3$`Property Type`)\nds3$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds3$`Transacted Price ($)`, perl = TRUE))\nds3$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds3$`Area (SQFT)`, perl = TRUE))\nds3$`Type of Sale` &lt;- tolower(ds3$`Type of Sale`)\nds3$`Type of Sale` &lt;- ifelse(ds3$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds3$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds4))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds4 &lt;- na.omit(ds4)\n\nds4$`Type of Sale` &lt;- as.factor(ds4$`Type of Sale`)\nds4$`Property Type` &lt;- as.factor(ds4$`Property Type`)\nds4$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds4$`Transacted Price ($)`, perl = TRUE))\nds4$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds4$`Area (SQFT)`, perl = TRUE))\nds4$`Type of Sale` &lt;- tolower(ds4$`Type of Sale`)\nds4$`Type of Sale` &lt;- ifelse(ds4$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds4$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds5))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds5 &lt;- na.omit(ds5)\n\nds5$`Type of Sale` &lt;- as.factor(ds5$`Type of Sale`)\nds5$`Property Type` &lt;- as.factor(ds5$`Property Type`)\nds5$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds5$`Transacted Price ($)`, perl = TRUE))\nds5$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds5$`Area (SQFT)`, perl = TRUE))\nds5$`Type of Sale` &lt;- tolower(ds5$`Type of Sale`)\nds5$`Type of Sale` &lt;- ifelse(ds5$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds5$`Type of Sale`, \"other\")\n\n\n\n\n\n\nEDA Relationship between Transactions & 2023/2024 Quarters\nPut your thoughts here.\n\n\nClick to show code\n\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\n\n# Check unique values in Sale Date\nunique(ds1$`Sale Date`)\n\n [1] \"01 Jan 2024\" \"02 Jan 2024\" \"03 Jan 2024\" \"04 Jan 2024\" \"05 Jan 2024\"\n [6] \"06 Jan 2024\" \"07 Jan 2024\" \"08 Jan 2024\" \"09 Jan 2024\" \"10 Jan 2024\"\n[11] \"11 Jan 2024\" \"12 Jan 2024\" \"13 Jan 2024\" \"14 Jan 2024\" \"15 Jan 2024\"\n[16] \"16 Jan 2024\" \"17 Jan 2024\" \"18 Jan 2024\" \"19 Jan 2024\" \"20 Jan 2024\"\n[21] \"21 Jan 2024\" \"22 Jan 2024\" \"23 Jan 2024\" \"24 Jan 2024\" \"25 Jan 2024\"\n[26] \"26 Jan 2024\" \"27 Jan 2024\" \"28 Jan 2024\" \"29 Jan 2024\" \"30 Jan 2024\"\n[31] \"31 Jan 2024\" \"01 Feb 2024\" \"02 Feb 2024\" \"03 Feb 2024\" \"04 Feb 2024\"\n[36] \"05 Feb 2024\" \"06 Feb 2024\" \"07 Feb 2024\" \"08 Feb 2024\" \"09 Feb 2024\"\n[41] \"10 Feb 2024\" \"12 Feb 2024\" \"13 Feb 2024\" \"14 Feb 2024\" \"15 Feb 2024\"\n[46] \"16 Feb 2024\" \"17 Feb 2024\" \"18 Feb 2024\" \"19 Feb 2024\" \"20 Feb 2024\"\n[51] \"21 Feb 2024\" \"22 Feb 2024\" \"23 Feb 2024\" \"24 Feb 2024\" \"25 Feb 2024\"\n[56] \"26 Feb 2024\" \"27 Feb 2024\" \"28 Feb 2024\" \"29 Feb 2024\" \"01 Mar 2024\"\n[61] \"02 Mar 2024\" \"03 Mar 2024\" \"04 Mar 2024\" \"05 Mar 2024\" \"06 Mar 2024\"\n[66] \"07 Mar 2024\" \"08 Mar 2024\" \"09 Mar 2024\" \"10 Mar 2024\" \"11 Mar 2024\"\n[71] \"12 Mar 2024\" \"13 Mar 2024\" \"14 Mar 2024\" \"15 Mar 2024\" \"16 Mar 2024\"\n[76] \"17 Mar 2024\" \"18 Mar 2024\" \"19 Mar 2024\" \"20 Mar 2024\" \"21 Mar 2024\"\n[81] \"22 Mar 2024\" \"23 Mar 2024\" \"24 Mar 2024\" \"25 Mar 2024\" \"26 Mar 2024\"\n[86] \"27 Mar 2024\" \"28 Mar 2024\" \"29 Mar 2024\" \"30 Mar 2024\" \"31 Mar 2024\"\n\n# Convert Sale Date to Date format\nds1$`Sale Date` &lt;- dmy(ds1$`Sale Date`)\nds2$`Sale Date` &lt;- dmy(ds2$`Sale Date`)\nds3$`Sale Date` &lt;- dmy(ds3$`Sale Date`)\nds4$`Sale Date` &lt;- dmy(ds4$`Sale Date`)\nds5$`Sale Date` &lt;- dmy(ds5$`Sale Date`)\n\n# Extract month from Sale Date\nds1$Month &lt;- month(ds1$`Sale Date`, label = TRUE)\nds2$Month &lt;- month(ds2$`Sale Date`, label = TRUE)\nds3$Month &lt;- month(ds3$`Sale Date`, label = TRUE)\nds4$Month &lt;- month(ds4$`Sale Date`, label = TRUE)\nds5$Month &lt;- month(ds5$`Sale Date`, label = TRUE)\n\n# Create individual bar plots for each quarter\nQ124 &lt;- ggplot(ds1, aes(x = Month)) +\n  geom_bar(fill = \"lightgreen\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Transactions 2024 Q1\",\n    x = \"Month\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    axis.text.y = element_text(size =8),\n    plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n    axis.title = element_text(size = 8),\n    legend.text = element_text(size = 8)\n  )\n\nQ423 &lt;- ggplot(ds2, aes(x = Month)) +\n  geom_bar(fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Transactions 2023 Q4\",\n    x = \"Month\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    axis.text.y = element_text(size =8),\n    plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n    axis.title = element_text(size = 8),\n    legend.text = element_text(size = 8)\n  )\n\nQ323 &lt;- ggplot(ds3, aes(x = Month)) +\n  geom_bar(fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Transactions 2023 Q3\",\n    x = \"Month\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    axis.text.y = element_text(size =8),\n    plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n    axis.title = element_text(size = 8),\n    legend.text = element_text(size = 8)\n  )\n\nQ223 &lt;- ggplot(ds4, aes(x = Month)) +\n  geom_bar(fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Transactions 2023 Q2\",\n    x = \"Month\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    axis.text.y = element_text(size =8),\n    plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n    axis.title = element_text(size = 8),\n    legend.text = element_text(size = 8)\n  )\n\nQ123 &lt;- ggplot(ds5, aes(x = Month)) +\n  geom_bar(fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Transactions 2023 Q1\",\n    x = \"Month\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    axis.text.y = element_text(size =8),\n    plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n    axis.title = element_text(size = 8),\n    legend.text = element_text(size = 8)\n  )\n\n\n\ncombined_plot &lt;- gridExtra::grid.arrange(Q123, Q223, Q323, Q423, ncol = 2)\n\n\n\nprint(combined_plot)\n\nTableGrob (2 x 2) \"arrange\": 4 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n3 3 (2-2,1-1) arrange gtable[layout]\n4 4 (2-2,2-2) arrange gtable[layout]\n\n\nWe’re comparing the first quarters of 2023 and 2024 to understand any changes in transaction volumes. Notably, January 2023 shows fewer transactions than January 2024.\nThis difference might be due to the easing of COVID-19 restrictions in early 2023. As people adjust to the changing circumstances, there’s a cautious approach towards property investments.\nThe increase in February 2023 suggests a possible recovery or resurgence in market activity following the easing of COVID-19 restrictions. However, by March 2023, we see a slight decrease of transactions. This could indicate a temporary dip or stabilization in market demand after the initial uptick in February.\n\ncombined_plot_2 &lt;- gridExtra::grid.arrange(Q123, Q124, ncol = 2)\n\n\n\nprint(combined_plot_2)\n\nTableGrob (1 x 2) \"arrange\": 2 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (1-1,2-2) arrange gtable[layout]\n\n\n\n\nEDA Exploring relationship between planning area and unit price ($PSF)\nWe have four charts depicting unit price ($ psf) to planning regions in Singapore through 2023 according to the 4 different quarters. By comparing the graphs, we can see the regional price variations in different quarters of the year.\nCentral Region show the highest median PSF throughout the year, indicating its status as a premium location. North East Region and East Region have stable PSF values, offering a balance between affordability and location.\n\n\nClick to show code\n\n\nlibrary(ggplot2)\nlibrary(cowplot)\n\n# Price per Square Foot by Planning Region in DS2\nq4 &lt;- ggplot(ds2, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Oct 23 - Dec 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n# Price per Square Foot by Planning Region in DS3\nq3 &lt;- ggplot(ds3, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Jul 23 - Sep 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n# Price per Square Foot by Planning Region in DS4\nq2 &lt;- ggplot(ds4, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Apr 23 - Jun 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n# Price per Square Foot by Planning Region in DS5\nq1 &lt;- ggplot(ds5, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Jan 23 - Mar 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n\nCombine the plots\n\n# Combine the plots using wrap_plots\ncombined_plot &lt;- wrap_plots(q1, q2, q3, q4, ncol = 2)\n# Display the combined plot\ncombined_plot\n\n\n\n\nNext, we combined the data sets and see the graph from 2023 Q1 - Q4 boxplot.\n\n\nClick to show code\n\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(plotly)\n\n# Combine the datasets into a single dataset\ncombined_ds &lt;- bind_rows(\n  ds1 %&gt;% mutate(Data_Source = \"data/ds1.csv\"),\n  ds2 %&gt;% mutate(Data_Source = \"data/ds2.csv\"),\n  ds3 %&gt;% mutate(Data_Source = \"data/ds3.csv\"),\n  ds4 %&gt;% mutate(Data_Source = \"data/ds4.csv\"),\n  ds5 %&gt;% mutate(Data_Source = \"data/ds5.csv\"),\n)\n\n# Calculate median and IQR by Planning Region\nsummary_stats &lt;- combined_ds %&gt;%\n  group_by(`Planning Region`) %&gt;%\n  summarise(\n    median_PSF = median(`Unit Price ($ PSF)`, na.rm = TRUE),\n    lower_quartile = quantile(`Unit Price ($ PSF)`, 0.25, na.rm = TRUE),\n    upper_quartile = quantile(`Unit Price ($ PSF)`, 0.75, na.rm = TRUE)\n  )\n\n# Create a boxplot for Price per Square Foot by Planning Region\np &lt;- ggplot(combined_ds, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  stat_summary(\n    fun = median,\n    geom = \"point\",\n    shape = 23,\n    size = 3,\n    color = \"blue\",\n    position = position_dodge(width = 0.75)\n  ) +\n  labs(\n    title = \"Distribution of Price per Square Foot by Planning Region - 2023 Q1-Q4\",\n    x = \"Planning Region\",\n    y = \"Unit Price ($ PSF)\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert ggplot to plotly object for interactivity\np_plotly &lt;- ggplotly(p, tooltip = c(\"Planning Region\", \"y\", \"Data_Source\", \"median_PSF\", \"lower_quartile\", \"upper_quartile\"))\n\n# Convert ggplot to plotly object for interactivity\np_plotly &lt;- plotly::ggplotly(p, tooltip = c(\"Planning Region\", \"y\", \"Data_Source\", \"median_PSF\", \"lower_quartile\", \"upper_quartile\"))\n\n\n\n# Display the interactive plot\np_plotly\n\n\n\n\n\n\nPut your take aways here.\n\n\n\nEDA Relationship between Property Type & Purchaser Address Indicator\nThe ‘Purchaser Address Indicator’ refers to the type of residence (either HDB flat or private property) associated with the purchaser’s address as indicated in the caveat. It doesn’t necessarily imply ownership but rather reflects the type of housing the purchaser resides in. If this information is unavailable, it’s marked as ‘N.A’.\nIt’s notable that a significant majority of private property buyers (presumably those residing in these properties) live in private residences, as expected.\nInterestingly, executive condominiums have the highest proportion of purchasers with HDB addresses, accounting for 53.6%. This could be attributed to the attractive rental yields in Singapore. Consequently, more residents might be purchasing executive condominiums primarily as investment properties.\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Calculate the percentage of each Purchaser Address Indicator within each Property Type\npercentage_data &lt;- combined_ds %&gt;%\n  group_by(`Property Type`, `Purchaser Address Indicator`) %&gt;%\n  summarise(Count = n()) %&gt;%\n  group_by(`Property Type`) %&gt;%\n  mutate(Percentage = (Count / sum(Count)) * 100) %&gt;%\n  ungroup()\n\n# Plot the stacked bar chart\nplot &lt;- ggplot(percentage_data, aes(x = `Property Type`, y = Percentage, fill = `Purchaser Address Indicator`)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  geom_text(aes(label = sprintf(\"%.1f%%\", Percentage)), \n            position = position_stack(vjust = 0.5), \n            size = 3, \n            color = \"black\") +\n  labs(\n    title = \"Percentage of Purchaser Address Indicator by Property Type\",\n    x = \"Property Type\",\n    y = \"Percentage (%)\",\n    fill = \"Purchaser Address Indicator\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n\nprint(plot)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "-",
    "section": "",
    "text": "ISSS608-Visual Analytics and Application\n“We’re entering a new world in which data may be more important than software.”\n- Tim O’Reilly\nAbout"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Getting Started\nIn the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\nrealis &lt;-read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis,\n       aes(x = `Unit Price ($ psm)`)) +\n  geom_histogram()"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_ex3/Hands-on_ex03.html",
    "href": "Hands-on_exercise/Hands-on_ex3/Hands-on_ex03.html",
    "title": "ISSS608",
    "section": "",
    "text": "Please update"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_ex1/Hands-on_Ex01.html",
    "href": "Hands-on_exercise/Hands-on_ex1/Hands-on_Ex01.html",
    "title": "Hands on Exercise 1",
    "section": "",
    "text": "Getting Started\nLoad and Install R packages\n\npacman::p_load(tidyverse, forcats)\n\n\n\nImport Data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n#Introductions to ggplot The aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can thus encode an aspect of the data and be used to convey information.\nBar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nDot Plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\nHistogram\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\nchanging aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\") \n\n\n\n\n\n\nggplot2: geom\ngeom-density()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()         \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()        \n\n\n\n\ngeom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()  \n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\ngeom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\ngeom_point()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()     \n\n\n\n\ncombining geom objects\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\nStatistics Functions\nThe Statistics functions statistically transform data, usually as some form of summary.\nUsing stat_summary() function to over ride the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)     \n\n\n\n\nAdding best curve on a scatterplot using geom_smooth\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\nWithout using geom_smooth\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point()\n\n\n\n\nOverriding default smoothing method\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n\n\n\n\n\nggplot2: facets\nfacet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\nfacet_grid()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\nggplot 2: coordinates\nBy the default, the bar chart of ggplot2 is in vertical form. The code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\nChanging the y- and x- axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\n\n\n\nUsing Themes\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Lin Guan Jhen, Elise\nISSS608 Visual Analytics and Applications under Prof. Kam Tin Seong as part of Singapore Management University Master of IT in business.\nLinkedIn | Email"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_ex2/Hands-on_Ex02.html",
    "href": "Hands-on_exercise/Hands-on_ex2/Hands-on_Ex02.html",
    "title": "Hands on Exercise 2",
    "section": "",
    "text": "Getting Started\nLoad and Install the required R packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\nImport Data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\nAnnotation: ggrepel\nCompare when using annotation\n\n\n\n\nwithout ggrepelwith ggrepel\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5, \n              formula = y~x) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\nggplot2 Themes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"yellow2\", \n                 fill=\"grey60\") +\n  theme_classic() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\nggtheme package\nUsing different themes\n\n\n\n\neconomistwsjsolarised\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_solarized()\n\n\n\n\n\n\n\n\n\nCombining Graphs\nStep 1: Create single graphs\n\n\n\n\n123\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\np3 &lt;-  \n  ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nStep 2: Combining\n\n(p1 / p2) | p3\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_ex4/Hands-on_Ex04.html",
    "href": "Hands-on_exercise/Hands-on_ex4/Hands-on_Ex04.html",
    "title": "ISSS608",
    "section": "",
    "text": "Please update…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "ISSS608",
    "section": "",
    "text": "Please update…"
  },
  {
    "objectID": "Take-home/Take-home_ex1/Take-home_x01.html",
    "href": "Take-home/Take-home_ex1/Take-home_x01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "Introduction\nIn Singapore, the residential property market is divided into public and private sectors. Public housing caters to households with a monthly income of less than or equal to S$14,000, aiming to provide affordable housing for the general populace. Conversely, the private housing market serves households with incomes exceeding S$14,000.\nFor this exercise, we’ll be utilizing REALIS transaction data spanning from 1st January 2023 to 31st March 2024 and explore the data sets using ggplot2 and its extensions.\n\n\nSetting the Scenes\nWe will be assuming the role of a graphical editor of a media company and had been requested to prepare two to three data visualization to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\n\nData Preparation\nLoad R Packages\n\npacman::p_load(tidyverse, haven,\n               ggrepel, ggthemes,\n               ggridges, ggdist,\n               patchwork, scales)\npacman::p_load(HH, tidyverse)\n\nImport the 5 data sets\n\nds1 &lt;- read_csv(\"data/ds1.csv\")\nds2 &lt;- read_csv(\"data/ds2.csv\")\nds3 &lt;- read_csv(\"data/ds3.csv\")\nds4 &lt;- read_csv(\"data/ds4.csv\")\nds5 &lt;- read_csv(\"data/ds5.csv\")\n\nMissing values had been removed to prevent parsing issues, to ensure that the data types matches the actual data some columns had been converted. Sale Date and Completion Date columns had been changed to as.Date format and Type of Sale, Property Type had been changed from char to factor data type.\nFor numeric columns, remove any non-numeric characters or replace them with appropriate values. For categorical columns, ensure consistent naming and handle any inconsistent or misspelled categories. After cleaning, validate the data to ensure that all inconsistencies and anomalies have been addressed.\nThe process had been repeated for all five data sets.\n\nds1ds2ds3ds4ds5\n\n\n\ncolSums(is.na(ds1))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds1 &lt;- na.omit(ds1)\n\nds1$`Type of Sale` &lt;- as.factor(ds1$`Type of Sale`)\nds1$`Property Type` &lt;- as.factor(ds1$`Property Type`)\nds1$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds1$`Transacted Price ($)`, perl = TRUE))\nds1$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds1$`Area (SQFT)`, perl = TRUE))\nds1$`Type of Sale` &lt;- tolower(ds1$`Type of Sale`)\nds1$`Type of Sale` &lt;- ifelse(ds1$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds1$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds2))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds2 &lt;- na.omit(ds2)\n\nds2$`Type of Sale` &lt;- as.factor(ds2$`Type of Sale`)\nds2$`Property Type` &lt;- as.factor(ds2$`Property Type`)\nds2$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds2$`Transacted Price ($)`, perl = TRUE))\nds2$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds2$`Area (SQFT)`, perl = TRUE))\nds2$`Type of Sale` &lt;- tolower(ds2$`Type of Sale`)\nds2$`Type of Sale` &lt;- ifelse(ds2$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds2$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds3))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          6                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds3 &lt;- na.omit(ds3)\n\nds3$`Type of Sale` &lt;- as.factor(ds3$`Type of Sale`)\nds3$`Property Type` &lt;- as.factor(ds3$`Property Type`)\nds3$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds3$`Transacted Price ($)`, perl = TRUE))\nds3$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds3$`Area (SQFT)`, perl = TRUE))\nds3$`Type of Sale` &lt;- tolower(ds3$`Type of Sale`)\nds3$`Type of Sale` &lt;- ifelse(ds3$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds3$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds4))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds4 &lt;- na.omit(ds4)\n\nds4$`Type of Sale` &lt;- as.factor(ds4$`Type of Sale`)\nds4$`Property Type` &lt;- as.factor(ds4$`Property Type`)\nds4$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds4$`Transacted Price ($)`, perl = TRUE))\nds4$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds4$`Area (SQFT)`, perl = TRUE))\nds4$`Type of Sale` &lt;- tolower(ds4$`Type of Sale`)\nds4$`Type of Sale` &lt;- ifelse(ds4$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds4$`Type of Sale`, \"other\")\n\n\n\n\ncolSums(is.na(ds5))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\nds5 &lt;- na.omit(ds5)\n\nds5$`Type of Sale` &lt;- as.factor(ds5$`Type of Sale`)\nds5$`Property Type` &lt;- as.factor(ds5$`Property Type`)\nds5$`Transacted Price ($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds5$`Transacted Price ($)`, perl = TRUE))\nds5$`Area (SQFT)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", ds5$`Area (SQFT)`, perl = TRUE))\nds5$`Type of Sale` &lt;- tolower(ds5$`Type of Sale`)\nds5$`Type of Sale` &lt;- ifelse(ds5$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds5$`Type of Sale`, \"other\")\n\n\n\n\n\n\nEDA 1 Exploring relationship between planning area and unit price ($psf)\nWe have four charts depicting unit price ($ psf) to planning regions in Singapore through 2023 according to the 4 different quarters. By comparing the graphs, we can see the regional price variations in different quarters of the year.\nCentral Region show the highest median PSF throughout the year, indicating its status as a premium location. North East Region and East Region have stable PSF values, offering a balance between affordability and location.\n\n\nClick to show code\n\n\nlibrary(ggplot2)\nlibrary(cowplot)\n\n# Price per Square Foot by Planning Region in DS2\nq4 &lt;- ggplot(ds2, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Oct 23 - Dec 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n# Price per Square Foot by Planning Region in DS3\nq3 &lt;- ggplot(ds3, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Jul 23 - Sep 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n# Price per Square Foot by Planning Region in DS4\nq2 &lt;- ggplot(ds4, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Apr 23 - Jun 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n# Price per Square Foot by Planning Region in DS5\nq1 &lt;- ggplot(ds5, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  labs(title = \"Price per Square Foot by Planning Region - Jan 23 - Mar 23\",\n       x = \"Planning Region\",\n       y = \"Unit Price ($ PSF)\") +\n  theme(text = element_text(size = 6)) \n\n\n\nCombined the plots\n\n# Combine the plots using wrap_plots\ncombined_plot &lt;- wrap_plots(q1, q2, q3, q4, ncol = 2)\n# Display the combined plot\ncombined_plot\n\n\n\n\nNext, we combined the data sets and see the graph from 2023 Q1 - Q4 boxplot.\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(plotly)\n\n# Combine the datasets into a single dataset\ncombined_ds &lt;- bind_rows(\n  ds1 %&gt;% mutate(Data_Source = \"data/ds1.csv\"),\n  ds2 %&gt;% mutate(Data_Source = \"data/ds2.csv\"),\n  ds3 %&gt;% mutate(Data_Source = \"data/ds3.csv\"),\n  ds4 %&gt;% mutate(Data_Source = \"data/ds4.csv\"),\n  ds5 %&gt;% mutate(Data_Source = \"data/ds5.csv\"),\n)\n\n# Calculate median and IQR by Planning Region\nsummary_stats &lt;- combined_ds %&gt;%\n  group_by(`Planning Region`) %&gt;%\n  summarise(\n    median_PSF = median(`Unit Price ($ PSF)`, na.rm = TRUE),\n    lower_quartile = quantile(`Unit Price ($ PSF)`, 0.25, na.rm = TRUE),\n    upper_quartile = quantile(`Unit Price ($ PSF)`, 0.75, na.rm = TRUE)\n  )\n\n# Create a boxplot for Price per Square Foot by Planning Region\np &lt;- ggplot(combined_ds, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot() +\n  stat_summary(\n    fun = median,\n    geom = \"point\",\n    shape = 23,\n    size = 3,\n    color = \"blue\",\n    position = position_dodge(width = 0.75)\n  ) +\n  labs(\n    title = \"Distribution of Price per Square Foot by Planning Region - 2023 Q1-Q4\",\n    x = \"Planning Region\",\n    y = \"Unit Price ($ PSF)\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert ggplot to plotly object for interactivity\np_plotly &lt;- ggplotly(p, tooltip = c(\"Planning Region\", \"y\", \"Data_Source\", \"median_PSF\", \"lower_quartile\", \"upper_quartile\"))\n\n# Convert ggplot to plotly object for interactivity\np_plotly &lt;- plotly::ggplotly(p, tooltip = c(\"Planning Region\", \"y\", \"Data_Source\", \"median_PSF\", \"lower_quartile\", \"upper_quartile\"))\n\n\n# Display the interactive plot\np_plotly\n\n\n\n\n\n\n#*Insights from Visualisations** -xx - xx - xx\n\n\n\nEDA 2\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\n\n# Check unique values in Sale Date\nunique(ds1$`Sale Date`)\n\n [1] \"01 Jan 2024\" \"02 Jan 2024\" \"03 Jan 2024\" \"04 Jan 2024\" \"05 Jan 2024\"\n [6] \"06 Jan 2024\" \"07 Jan 2024\" \"08 Jan 2024\" \"09 Jan 2024\" \"10 Jan 2024\"\n[11] \"11 Jan 2024\" \"12 Jan 2024\" \"13 Jan 2024\" \"14 Jan 2024\" \"15 Jan 2024\"\n[16] \"16 Jan 2024\" \"17 Jan 2024\" \"18 Jan 2024\" \"19 Jan 2024\" \"20 Jan 2024\"\n[21] \"21 Jan 2024\" \"22 Jan 2024\" \"23 Jan 2024\" \"24 Jan 2024\" \"25 Jan 2024\"\n[26] \"26 Jan 2024\" \"27 Jan 2024\" \"28 Jan 2024\" \"29 Jan 2024\" \"30 Jan 2024\"\n[31] \"31 Jan 2024\" \"01 Feb 2024\" \"02 Feb 2024\" \"03 Feb 2024\" \"04 Feb 2024\"\n[36] \"05 Feb 2024\" \"06 Feb 2024\" \"07 Feb 2024\" \"08 Feb 2024\" \"09 Feb 2024\"\n[41] \"10 Feb 2024\" \"12 Feb 2024\" \"13 Feb 2024\" \"14 Feb 2024\" \"15 Feb 2024\"\n[46] \"16 Feb 2024\" \"17 Feb 2024\" \"18 Feb 2024\" \"19 Feb 2024\" \"20 Feb 2024\"\n[51] \"21 Feb 2024\" \"22 Feb 2024\" \"23 Feb 2024\" \"24 Feb 2024\" \"25 Feb 2024\"\n[56] \"26 Feb 2024\" \"27 Feb 2024\" \"28 Feb 2024\" \"29 Feb 2024\" \"01 Mar 2024\"\n[61] \"02 Mar 2024\" \"03 Mar 2024\" \"04 Mar 2024\" \"05 Mar 2024\" \"06 Mar 2024\"\n[66] \"07 Mar 2024\" \"08 Mar 2024\" \"09 Mar 2024\" \"10 Mar 2024\" \"11 Mar 2024\"\n[71] \"12 Mar 2024\" \"13 Mar 2024\" \"14 Mar 2024\" \"15 Mar 2024\" \"16 Mar 2024\"\n[76] \"17 Mar 2024\" \"18 Mar 2024\" \"19 Mar 2024\" \"20 Mar 2024\" \"21 Mar 2024\"\n[81] \"22 Mar 2024\" \"23 Mar 2024\" \"24 Mar 2024\" \"25 Mar 2024\" \"26 Mar 2024\"\n[86] \"27 Mar 2024\" \"28 Mar 2024\" \"29 Mar 2024\" \"30 Mar 2024\" \"31 Mar 2024\"\n\n# Convert Sale Date to Date format\nds1$`Sale Date` &lt;- dmy(ds1$`Sale Date`)\n\n# Extract month from Sale Date\nds1$Month &lt;- month(ds1$`Sale Date`, label = TRUE)\n\n# Create a histogram for Sale Date by month\nggplot(ds1, aes(x = Month)) +\n  geom_bar(fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sales by Month\",\n    x = \"Month\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  }
]